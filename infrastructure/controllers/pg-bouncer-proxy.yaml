apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-proxy
  namespace: database
  labels:
    app: pg-proxy
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pg-proxy
  template:
    metadata:
      labels:
        app: pg-proxy
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: pg-proxy
                topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: aggregate-secrets-and-ca
          image: busybox:1.36
          command:
            - /bin/sh
            - -c
            - |
              # Download RDS CA bundle for ap-southeast-3 region
              echo "Downloading RDS CA bundle for ap-southeast-3..."
              wget -O /shared-auth/rds-ca.pem https://truststore.pki.rds.amazonaws.com/ap-southeast-3/ap-southeast-3-bundle.pem
              if [ $? -eq 0 ]; then
                echo "RDS CA bundle downloaded successfully."
              else
                echo "Error: Failed to download RDS CA bundle." >&2
                exit 1
              fi

              # Create userlist.txt by reading mounted secrets
              echo "Generating userlist.txt from Secrets..."
              echo "" > /shared-auth/userlist.txt
              # List of secrets (users) matching your provided list
              for secret in argo jupyterhub grafana stac stacread odc odcread; do
                if [ -f "/secrets/${secret}/password" ]; then
                  password=$(cat "/secrets/${secret}/password")
                  echo "\"${secret}\" \"${password}\"" >> /shared-auth/userlist.txt
                else
                  echo "Warning: Secret for ${secret} not found or missing password key" >&2
                fi
              done
              echo "Generated userlist.txt content (debug):"
              cat /shared-auth/userlist.txt
          volumeMounts:
            - name: shared-auth
              mountPath: /shared-auth
            # Mount each individual secret from the database namespace
            - name: argo-secret
              mountPath: /secrets/argo
              readOnly: true
            - name: jupyterhub-secret
              mountPath: /secrets/jupyterhub
              readOnly: true
            - name: grafana-secret
              mountPath: /secrets/grafana
              readOnly: true
            - name: stac-secret
              mountPath: /secrets/stac
              readOnly: true
            - name: stacread-secret
              mountPath: /secrets/stacread
              readOnly: true
            - name: odc-secret
              mountPath: /secrets/odc
              readOnly: true
            - name: odcread-secret
              mountPath: /secrets/odcread
              readOnly: true
      containers:
        - name: pg-proxy
          image: bitnami/pgbouncer:1.24.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: PGBOUNCER_POOL_MODE
              value: "transaction" # Suitable for mixed workloads
            - name: PGBOUNCER_MAX_CLIENT_CONN
              value: "200" # Adjust based on total expected connections
            - name: PGBOUNCER_DEFAULT_POOL_SIZE
              value: "20" # Adjust based on RDS connection limits
            - name: PGBOUNCER_RESERVE_POOL_SIZE
              value: "5" # For connection spikes
            - name: PGBOUNCER_SERVER_TLS_SSLMODE
              value: "verify-ca" # TLS to RDS
            - name: PGBOUNCER_SERVER_TLS_CA_FILE
              value: "/etc/pgbouncer/certs/rds-ca.pem"
            - name: PGBOUNCER_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: db_name
            - name: PGBOUNCER_HOST
              value: "db-endpoint.database.svc.cluster.local"
            - name: PGBOUNCER_PORT
              value: "5432"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: shared-auth
              mountPath: /etc/pgbouncer/userlist.txt
              subPath: userlist.txt
              readOnly: true
            - name: shared-auth
              mountPath: /etc/pgbouncer/certs/rds-ca.pem
              subPath: rds-ca.pem
              readOnly: true
      volumes:
        - name: shared-auth
          emptyDir: {}
        - name: argo-secret
          secret:
            secretName: argo
        - name: jupyterhub-secret
          secret:
            secretName: jupyterhub
        - name: grafana-secret
          secret:
            secretName: grafana
        - name: stac-secret
          secret:
            secretName: stac
        - name: stacread-secret
          secret:
            secretName: stacread
        - name: odc-secret
          secret:
            secretName: odc
        - name: odcread-secret
          secret:
            secretName: odcread
      restartPolicy: Always
