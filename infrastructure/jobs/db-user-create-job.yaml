---
apiVersion: batch/v1
kind: Job
metadata:
  name: db-user-creation-job
  namespace: database
spec:
  template:
    spec:
      containers:
        - name: postgres-client
          image: alpine:3.22
          command:
            - /bin/sh
            - -c
            - |
              # Install packages
              apk add --no-cache bash curl postgresql-client

              # Check if PGPASSWORD needs base64 decoding (try decode, fallback to original)
              if echo "$PGPASSWORD" | base64 -d >/dev/null 2>&1; then
                  DECODED_PGPASSWORD=$(echo "$PGPASSWORD" | base64 -d)
                  echo "Admin password was base64 encoded, decoded successfully"
              else
                  DECODED_PGPASSWORD="$PGPASSWORD"
                  echo "Admin password is already plain text"
              fi
              export PGPASSWORD="$DECODED_PGPASSWORD"

              # User passwords - assume they are plain text (no base64 decoding)
              echo "Using user passwords as plain text (no base64 decoding)"

              # Download SSL cert
              curl -o /tmp/rds-ca.pem https://truststore.pki.rds.amazonaws.com/ap-southeast-3/ap-southeast-3-bundle.pem
              export PGSSLMODE=verify-ca
              export PGSSLROOTCERT=/tmp/rds-ca.pem

              # Copy script to writable location and run it
              cp /scripts/create_users.sh /tmp/create_users.sh
              chmod +x /tmp/create_users.sh
              /tmp/create_users.sh
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: db_address
            - name: DB_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: username
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: db_name
            - name: ARGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: argo
                  key: password
            - name: JUPYTERHUB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jupyterhub
                  key: password
            - name: GRAFANA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: password
            - name: STACREAD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stacread
                  key: password
            - name: STAC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stac
                  key: password
            - name: ODCREAD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: odcread
                  key: password
            - name: ODC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: odc
                  key: password
          volumeMounts:
            - name: script
              mountPath: /scripts
      volumes:
        - name: script
          configMap:
            name: db-user-creation-script
            defaultMode: 0755
      restartPolicy: OnFailure
      livenessProbe:
        exec:
          command:
            - /bin/sh
            - -c
            - "test -f /tmp/job-completed"
